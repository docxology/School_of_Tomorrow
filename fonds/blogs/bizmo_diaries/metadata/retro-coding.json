{
  "id": "3012700852859568573",
  "title": "Retro Coding",
  "published": "2017-07-01T20:14:00.001-07:00",
  "updated": "2017-07-02T11:52:09.906-07:00",
  "content": ":: talks about CGI in the client / server context ::\n\nRetro Coding is where one deliberately dials back to an earlier point in time and uses tools at that time considered cutting edge, but since abandoned.\n\nA case in point:\u00a0 \"Common Gateway Interface\" or \"CGI\" programming. \"Computer-generated Imagery\" is the more common decoding; a name collision (just get clear on the namespace, for less cognitive dissonance).\n\nIn Python, we import the cgi module primarily for access to FieldStorage, an object that plays the role of sys.argv in some ways, the latter being a list object intermediary between \"__main__\" (the running namespace) and the shell command used to start a script.\n\nFor example:\u00a0 \n$ ./get_chem.py Au\u00a0 \n\npasses Au as a string string element to the running get_chem.py, which finds it in sys.argv[1].\u00a0 'get_chem.py' itself, the name of the running script, is what's in sys.argv[0].\n\nHere's an example lookup operating, running the above lookup about gold (\"Au\"):\n\n[\u00a0](https://www.flickr.com/photos/kirbyurner/35660955965/in/dateposted-public/) \n\nThat's Python's standard library CGI server in the background, plain vanilla.\u00a0 The going rate is not included. This pared down database lists he abbreviation and longer name, number of protons, and atomic mass.\u00a0 The long integer and KTU track when a user last touched the record, me in this case.\n\n>>> num1493462392>>> datetime.datetime.fromtimestamp(num)datetime.datetime(2017, 4, 29, 3, 39, 52)\n\nThe invocation in the foreground triggers a little script to send an HTTP request to said server, with a chemical element symbol (e.g. Au for Gold), which, if all goes well, returns a JSON string which the little script converts, to a list.  Print to console.  We're done:\n\n[](https://www.flickr.com/photos/kirbyurner/35273815140/in/dateposted-public/)\n\nTaking a look at that script, we see the Python DBI in action. That could have been Oracle we were talking to, like in the good old days (mythological allusion).\n\n[](https://www.flickr.com/photos/kirbyurner/35273860470/in/dateposted-public/)\n\nI've changed the shebang line to /usr/bin/env python, which is fine if you're running Python3 or greater, and shared the two scripts [via Github](https://github.com/4dsolutions/Python5/), for educational use.\u00a0 Thanks to [WorkingIt](http://workingit.com/)!\n\nThe database table, periodic_table.db, is likewise available.\u00a0 I'm continuing to evolve this little project, adding AJAX to the mix.",
  "categories": [],
  "author": "Kirby Urner",
  "blog_name": "bizmo_diaries"
}