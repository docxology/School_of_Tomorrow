{
  "id": "3109872440554269080",
  "title": "High School STEM",
  "published": "2015-08-15T21:18:00.000-07:00",
  "updated": "2015-08-16T07:03:19.360-07:00",
  "content": "[](https://www.flickr.com/photos/kirbyurner/20426299759/in/dateposted-public/)\n\nThe above is from a Clojure REPL in the Eclipse environment (IDE), whereas below is pretty much the same idea in a Python REPL, in PyCharm.\n\nThe symbol 'map' is a built-in function in both languages and does the same thing:\u00a0 it applies a function to each member of a collection.\n\nHow the collections are named depends on the namespace:\u00a0 Python or Clojure.\n\nThe square bracket collection above [1 2 3 4] is called a vector and needs no commas as commas count as whitespace in Clojure.\n\nBelow, in Python, [1, 2, 3, 4] is called a list, though a tuple might have been used, in which case parentheses replace square brackets.\u00a0 Commas would be required either way.\n\nWhat Python outputs is not another list (or vector) but an iterator, named mo in the example below.\u00a0 An iterator is by definition responsive to the next() function.\n\nEach time the iterator is fed to next( ), it yields its next value in the sequence, by applying the lambda to a next element.\u00a0 One might also loop over mo in a \"for elem in mo:\" construct.\n\nA lambda expression in Python is a way of defining a function on the fly that need not be remembered with a name.\u00a0 The Clojure function is likewise anonymous, using fn instead of defn.\n\n[](https://www.flickr.com/photos/kirbyurner/20425003958/in/dateposted-public/)\n\nAlthough full blown mastery of either Python or Clojure might be too much to expect of an average busy high schooler, with limited study and practice time, some exposure to both is not out of the question.\n\nLet the spiraling begin!\n\nA strong STEM curriculum would likely include at least some dialog with the various REPLs, with mentor guidance, and combined with self study.\n\nYak with Python.\u00a0 Chat with Clojure.\u00a0 Get used to having these tools around.\u00a0 They're free for the downloading (IDEs too).\u00a0 Instructional materials abound.\u00a0 Get in gear!",
  "categories": [],
  "author": "Kirby Urner",
  "blog_name": "bizmo_diaries"
}