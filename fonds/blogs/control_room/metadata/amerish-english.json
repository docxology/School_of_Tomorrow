{
  "id": "3861588934931782972",
  "title": "Amerish English",
  "published": "2013-08-24T12:13:00.005-07:00",
  "updated": "2013-08-24T17:27:31.960-07:00",
  "content": "[](http://www.flickr.com/photos/kirbyurner/9583829639/)\n\nJavaScript is the local puppet master,\u00a0\nin communication with\u00a0\na netherworld of cloud based Servers.\n\nHTTP and JSON\u00a0\nkeep the AJAX alive\u00a0\nas Clients push their shopping carts\nor whatever.\n\nOld myths lay just beneath the surface.\u00a0\n\nThe dragon, atop a treasure trove: \nour Python coiled among memory stones,\u00a0\nlatter day oracles,\neach full of juicy secrets,\u00a0\nsome authentication required.\n\nI was arguing with Steve and Patrick at Mulligan's the other day, that HTML is in the province of the English teacher, grammar teacher, elementary school language skills teacher.\u00a0 It's not \"computer science\" or a \"computer language\", it's more punctuation, like semi-colons 'n $%&, plus with some auxiliary grammar, the XML concepts (or, [as I explained to Uncle Bill](http://mybizmo.blogspot.com/2013/08/leveraging-python.html) SGML concepts, from Boeing).\n\nPatrick shot back that software gets between conventional writing skills and all this machine-oriented stuff, so mastery of HTML is not a prerequisite for mastery of English, that boundary still stands.\u00a0 My thoughts went back to [Gene Fowler's thesis](http://controlroom.blogspot.com/2006/08/more-cast.html), that Amerish (as distinct from English) did include XML grammars (one could say) much as the Roman language included outlines, argument templates, formats.\u00a0 A meta-grammar if you will (this was Steve's point).\n\nAssuming Gene has a genuine leading here, lets explore moving move of this HTML stuff into both literature and theater.\u00a0 For one, you have the Document Object Model (the DOM), which you may think of as an XML outline and a puppet, a segmented floppy thing controlled by strings (or controller).\u00a0 JavaScript makes the DOM \"laugh and play\".\u00a0 You write scripts for JavaScript or you could say JavaScript is but scripts, much as English contains (is, gives form to) what we might call \"scenarios\" (an overlapping feature with Synergetics, another language, that has those too).\n\nYou don't want your JavaScript-controlled client-facing environment to get bogged down or bottle necked owing to not enough attention from the server.\u00a0 A poorly designed web framework makes the browser wait for updates that could just as well be handled within the browser by JavaScript.\u00a0 The server gets bombarded by minutiae that could have been handled locally, and so service for everyone bogs down.\u00a0 \"One server per many clients\" is the expected geometry here, and the devil is in the details of how that's managed. \n\nIf there's no zip code but one is required, or if the puzzle question is not solved (correctly or incorrectly), then lets not go running off to the server half-cocked.\u00a0 Have all your papers in order before reaching the server's desk, don't be fumbling through your bottomless purse for that elusive passport.\u00a0 Servers need to move quickly, not sit there grinding away pointing out exceptions, empty blanks, missing data.\u00a0 The client side should have handled that stuff.\u00a0 First get the blanks filled, then send only completed forms to the server for transaction processing.\n\nThink of court life in the age of monarchs and needing the King's clock cycles to settle some dispute or obtain permission to build some facility (approval, denial... whatever).\u00a0 You queue for the King for days and days, bribing the right officials, and some wrong ones, and when you finally do meet the King you realize vital facts are missing from your story, facts that could have been discovered and provided in the time intervening, if only there had been the proper form (template), a list of minutiae that might arise.\u00a0 If you're thinking lawyers and JavaScript have something in common, as to their role in workflow governance, you may have something there.\n\nPython is happy to delegate that which can be or has been covered.\u00a0 Widget tool kits and web browsers were and are doing fine without having their guts be in Python.\u00a0 Google App Engine got outfitted from the inside (I used it for an I Ching application), and novel ways of configuring the back end (e.g. Heroku) kept adding to Python's power on the server side.\u00a0 As a mediator between SQL engines and HTML, Python was an early \"P language\" as in the classic \"LAMP stack\" (Linux, Apache, MySQL, a P-language: PHP, Python or Perl).\u00a0 So letting JavaScript manage the DOM has always seemed quite natural.\u00a0 Talk to JavaScript with JSON and everything's smooth.\n\nThis was a literature class, not a computer science class.\u00a0 The \"tabla rasa\" or \"blank canvas\" of our day is the web page.\u00a0 That's where most writing now appears, even when published in hard copy on demand.\u00a0 Gene had a point about the final repository being more XML-like at the roots, not necessarily applied \"later\".\u00a0 The structure and logic of the document requires the DOM to express and define itself.\u00a0 To argue these are the skills of human language writers, not just machines, is not the huge uphill battle it once was.\u00a0 \"Amerish\" (a-MER-ish) is taking shape.\n\nPostscript:\u00a0 Adobe's PDF format or Portable Document Format is another DOM with its own controller language.\u00a0 Although servers may create PDFs on the fly and serve them to browsers, PDF has not taken off as an alternative to HTML + CSS + JavaScript.\u00a0 They each fill their own niche.\u00a0 PDF remains under-appreciated for its ability to contain embedded media such as videos, as well as internal hyperlinks.\n\n[](http://www.flickr.com/photos/kirbyurner/7276024654/)",
  "categories": [],
  "author": "Kirby Urner",
  "blog_name": "control_room"
}