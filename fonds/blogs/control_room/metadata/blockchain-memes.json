{
  "id": "9086815105763332531",
  "title": "Blockchain Memes",
  "published": "2018-07-08T11:33:00.002-07:00",
  "updated": "2018-07-08T11:42:31.860-07:00",
  "content": "I'm suggesting those tasked with evangelizing for Blockchain, take some time tuning in the memes around Rust, the computer language.\n\nThe financial industry works to correct mistakes and remove ambiguity from transactions, while those hoping to game the system kick up a lot of ink, to obfuscate their wheelings and dealings.\n\nIn writing C++, geeks may corrupt memory, leading to crashes, because the compiler is insufficiently strict.\u00a0 Rust enforces the disciplines a strong C++ coder would bring to the table, through its compiler.\u00a0 That's closer to what a blockchain does, when it comes to preventing ambiguities that cover for impossibilities.\n\nBankers may be reluctant to talk about all the double-spending schemes by which people try to auto-boot their fortunes.\u00a0 Going into nit-picky detail about scams is counterproductive, as to describe exploits is to encourage them.\n\nThe cyber-security industry is already hip to this problem, of announcing a weakness in time for the white hats to apply the patch, before the black hats get wind of a new Achilles heel.\n\nThanks to the miracle of metaphor, akin to transposing to a different key in music, we can talk about \"corruption\" in the C++ context until the cows come home, thinking how writing systems that don't crash is a similar challenge to that confronting the banking industry.\u00a0 The original bank is a memory bank or bank of memory cells.\n\nWhat a blockchain does is impose strict auditing such that multiple observers agree, but also may contend for the right to record.\u00a0 The global network learns of transactions in different orders, thanks to non-simultaneity of information transfer.\u00a0 So which chronology should become canonical?\n\nThe Bitcoin answer is to hold a contest, and may the best bitcoin miner win.\u00a0 This contention for control over write access is what some in-house blockchains may surrender.\u00a0 The metaphor here might be unsafe mode.\u00a0 Insider Rustaceans are allowed to break the rules when creating the means to enforce safety.\n\nIn sum, a C++ code base may be crash prone if open to ambiguity, which malware may then exploit.\u00a0 Browsers live on the front lines in many use cases, in accepting content through their ports.\u00a0 IE had to be abandoned for Edge for such problems.\n\nBanks, which lend out and take ownership, as in Rust, may find their bookkeeping turning to garbage if the pointers turn out to not point to anything.\u00a0 You've promised savings to borrowers, and interest on borrowings to savers, what could go wrong?",
  "categories": [],
  "author": "Kirby Urner",
  "blog_name": "control_room"
}