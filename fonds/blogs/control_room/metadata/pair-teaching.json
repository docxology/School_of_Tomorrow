{
  "id": "6901847240582445164",
  "title": "Pair Teaching",
  "published": "2009-05-23T16:34:00.000-07:00",
  "updated": "2009-05-23T17:00:36.925-07:00",
  "content": "If you've been tuning in the buzz in gnu math circles, you know we're into something called extreme programming ([XP](http://controlroom.blogspot.com/2008/01/polymorphic-xp.html)), which overlaps with TDD (test driven development), some of [R0ml's modeling](http://mybizmo.blogspot.com/2008/07/more-oscon-keynotes.html).One hallmark of XP is \"pair programming\" where you don't code as a solo activity.  This practice is typically carried out in corporate settings, under the supervision of managers schooled in these techniques.  How often one switches partners and what the various workstations get tasked with doing, is part of the \"secret sauce\" one needn't share with the world in any detail, yet may package for training purposes, or for TV documentaries.The pair programming practice has maybe morphed somewhat given the [DVCS-based approach](http://worldgame.blogspot.com/2009/05/ppug-2009512.html):  let everyone watch the whole show, including test off-shoots, then use social networking tools to agree on and tag release versions, to resolve merge and branch issues, to harness the synergies.  It's obviously not either/or.How this business world milieu influenced the curriculum was in helping to spread this practice of \"pair teaching\".  Having math and history teachers work as a team, as co-workers, sharing the floor, modeling peer-to-peer behaviors, was considered unusual at the time of this writing.  The prevailing template was \"one teacher, many children\", not our contemporary \"minimum two\" standard.",
  "categories": [],
  "author": "Kirby Urner",
  "blog_name": "control_room"
}