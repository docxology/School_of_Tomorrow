{
  "id": "76948131056572300",
  "title": "Scala Tutorial at OSCON",
  "published": "2014-07-20T13:47:00.002-07:00",
  "updated": "2014-11-30T10:07:42.270-08:00",
  "content": "My notes from [Get Started Developing with Scala](http://www.oscon.com/oscon2014/public/schedule/detail/34095) by Jason Swartz and Kelsey Gilmore-Innis.\n\nThis is my day for JVM languages i.e. languages that compile to the Java Virtual Machine. \u00a0[Clojure](http://controlroom.blogspot.com/2014/07/oscon-2014-tutorials-day-1.html) and Scala both fit that bill and have other features in common as well: \u00a0immutable data, functional programming, first class functions. \n\nI opted for this tutorial based on a lunch conversation at one of the i18n tables and showed up with nothing working or even installed. \u00a0One of the minders got me up and running, getting stuff off a memory stick.\n\nTurns out my version of Java was too old on the OST Mac Air. \u00a0I'm grabbing jdk-7u65-macosx-x64.dmg. \u00a0That worked. \n\nNow I have a little web servlet going, controlled by the tutorial code.\n\nStarting SBT for OSCON Scala tutorial\nmackurner:scala-tutorial kurner$ ./sbt.sh\u00a0\nStarting SBT for OSCON Scala tutorial\n[info] Loading project definition from /Users/kurner/Documents/scala-tutorial/project\n[info] Set current project to Scala Tutorial (in build file:/Users/kurner/Documents/scala-tutorial/)\n> console\n[info] Generating /Users/kurner/Documents/scala-tutorial/target/scala-2.10/resource_managed/main/rebel.xml.\n[info] Starting scala interpreter...\n[info]\u00a0\nWelcome to Scala version 2.10.4 (Java HotSpot(TM) 64-Bit Server VM, Java 1.7.0_65).\nType in expressions to have them evaluated.\nType :help for more information.\n\nscala> \"Hello, Scala\"\nres0: String = Hello, Scala\u00a0\nscala> var started_programming: Map[String,Int] = Map(\"Kirby\" -> 24, \"Odd\" -> 25)\nstarted_programming: Map[String,Int] = Map(Kirby -> 24, Odd -> 25)\n\nThe language is not entirely unlike Java, statically typed, object oriented, but is more spare, more \"expression-oriented\" according to our presenter. \u00a0Someone who knows Java might move to Scala next.\n\nLike Python and Clojure, Scala has [a REPL](http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) (shown above). \n\nI'm sitting next to a man named Odd Are. I like that.\n\nFor those who know Python:\n\n>>> list(filter(lambda i: i < 3, [1, 2, 3]))\n\nis the same as\n\nscala> List(1, 2, 3).filter(i => i < 3)\n\nor even\n\nscala> List(1,2,3).filter(_ < 3). \n\nBoth Python and Scala feature top-level functions, meaning you're free and encouraged to pass them as arguments on occasion. \u00a0The methods map, reduce and filter give you a basis for functional programming.\n\nOur presenters recommend easing into Scala by using it to write tests for Java code.\n\nRecommended followup tutorial: \u00a0[The Neophytes Guide to Scala](http://danielwestheide.com/scala/neophytes.html).",
  "categories": [],
  "author": "Kirby Urner",
  "blog_name": "control_room"
}